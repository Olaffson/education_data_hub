name: "Import Data to SQL"

on:
  workflow_dispatch:
  # schedule:
  #   - cron: '0 0 1 * *'

jobs:
  setup:
    name: "üõ†Ô∏è Setup Environment"
    runs-on: ubuntu-latest
    outputs:
      python-version: '3.10'
    steps:
      - name: üõé Checkout Repository
        uses: actions/checkout@v3

      - name: üêç Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: üì¶ Install ODBC Driver
        run: |
          sudo curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
          curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y msodbcsql18
          sudo ACCEPT_EULA=Y apt-get install -y mssql-tools18
          echo 'export PATH="$PATH:/opt/mssql-tools18/bin"' >> ~/.bashrc
          source ~/.bashrc

      - name: üì• Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

  import-ips-lycee:
    name: "üìÑ Import ips_lycee.csv"
    needs: setup
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./prod/import
    steps:
      - uses: actions/checkout@v3
      - run: python -m bdd_sql.import_ips_lycee_to_sql
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          SQL_ADMIN_USERNAME: ${{ secrets.SQL_ADMIN_USERNAME }}
          SQL_ADMIN_PASSWORD: ${{ secrets.SQL_ADMIN_PASSWORD }}

  import-effectifs-tg:
    name: "üìÑ Import effectifs_tg.csv"
    needs: setup
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./prod/import
    steps:
      - uses: actions/checkout@v3
      - run: python -m bdd_sql.import_effectifs_tg_to_sql
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          SQL_ADMIN_USERNAME: ${{ secrets.SQL_ADMIN_USERNAME }}
          SQL_ADMIN_PASSWORD: ${{ secrets.SQL_ADMIN_PASSWORD }}

  import-ecoles-effectifs:
    name: "üìÑ Import ecoles_effectifs.csv"
    needs: setup
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./prod/import
    steps:
      - uses: actions/checkout@v3
      - run: python -m bdd_sql.import_ecoles_effectifs_to_sql
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          SQL_ADMIN_USERNAME: ${{ secrets.SQL_ADMIN_USERNAME }}
          SQL_ADMIN_PASSWORD: ${{ secrets.SQL_ADMIN_PASSWORD }}

  import-bac-par-academie:
    name: "üìÑ Import bac_par_academie.csv"
    needs: setup
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./prod/import
    steps:
      - uses: actions/checkout@v3
      - run: python -m bdd_sql.import_bac_par_academie_to_sql
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          SQL_ADMIN_USERNAME: ${{ secrets.SQL_ADMIN_USERNAME }}
          SQL_ADMIN_PASSWORD: ${{ secrets.SQL_ADMIN_PASSWORD }}

  upload-logs:
    name: üìù Upload Logs
    needs: [import-ips-lycee, import-effectifs-tg, import-ecoles-effectifs, import-bac-par-academie]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: actions/checkout@v3
      - name: Upload logs
        uses: actions/upload-artifact@v4
        with:
          name: sql-import-logs
          path: |
            ./prod/import/logs
            ./prod/import/*.log
          retention-days: 7


# name: "Import Data to SQL"

# on:
#   workflow_dispatch:  # D√©clenchement manuel
#   # schedule:
#   #   - cron: '0 0 1 * *'  # Le 1er de chaque mois √† minuit (00:00)

# jobs:
#   import_to_sql:
#     name: "Import Data to SQL Database"
#     runs-on: ubuntu-latest

#     env:
#       AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
#       AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
#       AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
#       AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
#       SQL_ADMIN_USERNAME: ${{ secrets.SQL_ADMIN_USERNAME }}
#       SQL_ADMIN_PASSWORD: ${{ secrets.SQL_ADMIN_PASSWORD }}

#     defaults:
#       run:
#         working-directory: ./prod/import

#     steps:
#       - name: üõé Checkout Repository
#         uses: actions/checkout@v3

#       - name: üêç Set up Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.10'

#       - name: üì¶ Install ODBC Driver
#         run: |
#           sudo curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
#           curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list
#           sudo apt-get update
#           sudo ACCEPT_EULA=Y apt-get install -y msodbcsql18
#           sudo ACCEPT_EULA=Y apt-get install -y mssql-tools18
#           echo 'export PATH="$PATH:/opt/mssql-tools18/bin"' >> ~/.bashrc
#           source ~/.bashrc

#       - name: üì• Install Python Dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt

#       - name: üöÄ Run SQL Import
#         run: python -m bdd_sql.import_to_sql
#         env:
#           AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
#           AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
#           AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
#           SQL_ADMIN_USERNAME: ${{ secrets.SQL_ADMIN_USERNAME }}
#           SQL_ADMIN_PASSWORD: ${{ secrets.SQL_ADMIN_PASSWORD }}

#       - name: üìù Upload Logs
#         if: always()
#         uses: actions/upload-artifact@v4
#         with:
#           name: sql-import-logs
#           path: |
#             ./prod/import/logs
#             ./prod/import/*.log
#           retention-days: 7